version: '3'

services:
  mariadb:
    image: mariadb:10.5.9
    container_name: mariadb
    # networks:
    #   - batch_network  
    ports:
      - 3306:3306    
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=toor1!
      - MYSQL_HOST=localhost
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=batchdb
      - MYSQL_USER=batch-app
      - MYSQL_PASSWORD=1q2w3e4r5t
      - TZ=Asia/Seoul
    volumes:
      - ./db/mariadb/conf.d:/etc/mysql/conf.d
      - ./db/mariadb/data:/var/lib/mysql
      - ./db/mariadb/initdb.d:/docker-entrypoint-initdb.d

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.1
    container_name: zookeeper
    # networks:
    #   - batch_network    
    ports:
      - 2181:2181      
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:6.0.1
    container_name: broker
    # networks:
    #   - batch_network    
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
      KAFKA_MESSAGE_MAX_BYTES: 3072000
      # from-epg-topic : 1 partition, 3 replicas
      # KAFKA_CREATE_TOPICS: "from-epg-topic:1:3,from-pip-topic:1:3,from-smr-topic:1:3"

  # kafka-ui:
  #   image: provectuslabs/kafka-ui
  #   container_name: kafka-ui
  #   ports:
  #     - 8000:8080
  #   restart: always
  #   environment:
  #     - KAFKA_CLUSTERS_0_NAME=local
  #     - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:9092
  #     - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  mongo1:
    image: mongo:4.4.5
    container_name: mongo1
    expose:
      - 27017
    ports:
      - 27017:27017      
    # networks:
    #   - batch_network
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "r0" ]

  mongo2:
    image: mongo:4.4.5
    container_name: mongo2
    expose:
      - 27018
    ports:
      - 27018:27017      
    # networks:
    #   - batch_network
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "r0" ]

  mongo3:
    image: mongo:4.4.5
    container_name: mongo3
    expose:
      - 27019
    ports:
      - 27019:27017      
    # networks:
    #   - batch_network
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "r0" ]

  mongo24:
    image: mongo:2.4
    container_name: mongo24
    expose:
      - 28017
    ports:
      - 28017:27017      

#  oracle12c:
#    image: quay.io/maksymbilenko/oracle-12c
#    container_name: oracle12c
#    restart: always
#    ports:
#      - 1521:1521
#    environment:
#      USER: system
#      PASSWORD: oracle
#      DB_SID: xe
#      DB_SERVICE_NAME: xe
#    volumes:
#    - ./db/oracle/oradata:/opt/oracle/oradata
#    - ./db/oracle/initdb.d:/docker-entrypoint-initdb.d

  oracle18c:
    image: hothamandcheese/oracle-18.4.0-xe
    container_name: oracle-18-xe
    restart: always
    ports:
      - 1521:1521
    environment:
      - ORACLE_PWD=ORACLE
      - ORACLE_CHARACTERSET=AL32UTF8
    volumes:
      - ./db/oracle/oradata:/opt/oracle/oradata
      - ./db/oracle/initdb.d:/docker-entrypoint-initdb.d

  mongoku:
    image: huggingface/mongoku
    container_name: mongoku
    ports:
      - 3100:3100
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    # networks:
    #   - batch_network
    environment:
      MONGOKU_DEFAULT_HOST: "mongodb://mongo1:27017"